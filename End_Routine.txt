PROGRAM trans_routine.


*---------------------------------------------------------------------*
*       CLASS routine DEFINITION
*---------------------------------------------------------------------*
*
*---------------------------------------------------------------------*
CLASS lcl_transform DEFINITION.
  PUBLIC SECTION.

*  Attributs
    DATA:
      p_check_master_data_exist
            TYPE RSODSOCHECKONLY READ-ONLY,
*-    Instance for getting request runtime attributs;
*     Available information: Refer to methods of
*     interface 'if_rsbk_request_admintab_view'
      p_r_request
            TYPE REF TO if_rsbk_request_admintab_view READ-ONLY.

  PRIVATE SECTION.

    TYPE-POOLS: rsd, rstr.

*   Rule specific types
    TYPES:
      BEGIN OF _ty_s_TG_1,
*      Field: /BIC/ZNOV_SSOT SCC_OUTROS.
        /BIC/ZNOV_SSOT           TYPE C LENGTH 60,
*      Field: MATL_GROUP Grupo de mercadorias.
        MATL_GROUP           TYPE C LENGTH 60,
*      Field: /BIC/ZSUBBRAND Sub-Brand.
        /BIC/ZSUBBRAND           TYPE C LENGTH 60,
*      Field: /BIC/ZEMB_TP Tipo Embalagem.
        /BIC/ZEMB_TP           TYPE C LENGTH 60,
*      Field: /BIC/ZNOV_MAID ID Marca.
        /BIC/ZNOV_MAID           TYPE C LENGTH 60,
*      Field: /BIC/ZBPARTNER Cod. PN.
        /BIC/ZBPARTNER           TYPE C LENGTH 60,
*      Field: /BIC/ZBPARTNER_T Parceiro de Negócios.
        /BIC/ZBPARTNER_T           TYPE C LENGTH 60,
*      Field: REGIO_GRP AEC: agrup.estr.reg..
        REGIO_GRP           TYPE C LENGTH 60,
*      Field: /BIC/ZCOD_CONC Concelho.
        /BIC/ZCOD_CONC           TYPE C LENGTH 60,
*      Field: /BIC/ZCOD_FREG Freguesia.
        /BIC/ZCOD_FREG           TYPE C LENGTH 60,
*      Field: /BIC/ZTPLOGIA3 Tipologia 3.
        /BIC/ZTPLOGIA3           TYPE C LENGTH 60,
*      Field: /BIC/ZABC OPB.
        /BIC/ZABC           TYPE C LENGTH 60,
*      Field: /BIC/ZACC_MAN Account Manager.
        /BIC/ZACC_MAN           TYPE C LENGTH 60,
*      Field: /BIC/ZNOV_GPST Cliente: GPS Lat.
        /BIC/ZNOV_GPST           TYPE C LENGTH 60,
*      Field: /BIC/ZNOV_GPSG Cliente: GPS Long.
        /BIC/ZNOV_GPSG           TYPE C LENGTH 60,
*      Field: /BIC/ZCAPACITY Capacity.
        /BIC/ZCAPACITY           TYPE C LENGTH 60,
*      Field: /BIC/ZVARIEDAD Variedade.
        /BIC/ZVARIEDAD           TYPE C LENGTH 60,
*      Field: CALMONTH Ano civil/mês.
        CALMONTH           TYPE C LENGTH 60,
*      Field: /BIC/ZNOV_LITR Litros.
        /BIC/ZNOV_LITR           TYPE C LENGTH 60,
*      Field: /BIC/ZNOV_VDTT Vendas Totais.
        /BIC/ZNOV_VDTT           TYPE C LENGTH 60,
*      Field: CURRENCY Moeda.
        CURRENCY           TYPE C LENGTH 60,
*      Field: RECORD.
        RECORD           TYPE RSARECORD,
      END   OF _ty_s_TG_1.
    TYPES:
      _ty_t_TG_1        TYPE STANDARD TABLE OF _ty_s_TG_1
                        WITH NON-UNIQUE DEFAULT KEY.

*$*$ begin of global - insert your declaration only below this line  *-*

    DATA: lt_regi TYPE TABLE OF /bic/pzbpartner.
    DATA: ls_regi TYPE /bic/pzbpartner.

    DATA: lt_clid TYPE TABLE OF /bic/pznov_clid.
    DATA: ls_clid TYPE /bic/pznov_clid.

    DATA: lt_acct TYPE TABLE OF /bic/pzbpartner.
    DATA: ls_acct TYPE /bic/pzbpartner.

    DATA: lt_acctx TYPE TABLE OF /bic/tzbpartner.
    DATA: ls_acctx TYPE /bic/tzbpartner.

    DATA: lt_mgrp TYPE TABLE OF /bi0/tmatl_group.
    DATA: ls_mgrp TYPE /bi0/tmatl_group.

    DATA: lt_rand TYPE TABLE OF /bic/tzsubbrand.
    DATA: ls_rand TYPE /bic/tzsubbrand.

    DATA: lt_mbtp TYPE TABLE OF /bic/tzemb_tp.
    DATA: ls_mbtp TYPE /bic/tzemb_tp.

    DATA: lt_maid TYPE TABLE OF /bic/tznov_maid.
    DATA: ls_maid TYPE /bic/tznov_maid.

    DATA: lt_conc TYPE TABLE OF /bic/tzcod_conc.
    DATA: ls_conc TYPE /bic/tzcod_conc.

    DATA: lt_freg TYPE TABLE OF /bic/tzcod_freg.
    DATA: ls_freg TYPE /bic/tzcod_freg.

    DATA: lt_logi TYPE TABLE OF /bic/tztplogia3.
    DATA: ls_logi TYPE /bic/tztplogia3.

    DATA: lt_zabc TYPE TABLE OF /bic/tzabc.
    DATA: ls_zabc TYPE /bic/tzabc.

    DATA: ti_zmvar TYPE TABLE OF /bic/tzmvar_cmg.
    DATA: w_zmvar TYPE /bic/tzmvar_cmg.

    DATA: ti_zcap TYPE TABLE OF /bic/tzcapacity.
    DATA: w_zcap TYPE /bic/tzcapacity.

*$*$ end of global - insert your declaration only before this line   *-*
    METHODS
      new_record__end_routine
        IMPORTING
          source_segid             type rstran_segid
          source_record            type sytabix
        EXPORTING
          record_new               type sytabix.

    METHODS
      end_routine
        IMPORTING
          request                  type rsrequest
          datapackid               type rsdatapid
          segid                    type rsbk_segid
        EXPORTING
          monitor                  type rstr_ty_t_monitors
        CHANGING
          RESULT_PACKAGE              type _ty_t_TG_1
        RAISING
          cx_rsrout_abort
          cx_rsbk_errorcount.
    METHODS
      inverse_end_routine
        IMPORTING
          i_th_fields_outbound         TYPE rstran_t_field_inv
          I_R_SELSET_OUTBOUND          TYPE REF TO CL_RSMDS_SET
          i_is_main_selection          TYPE rs_bool
          i_r_selset_outbound_complete TYPE REF TO cl_rsmds_set
          i_r_universe_inbound         TYPE REF TO CL_RSMDS_UNIVERSE
        CHANGING
          c_th_fields_inbound          TYPE rstran_t_field_inv
          c_r_selset_inbound           TYPE REF TO CL_RSMDS_SET
          c_exact                      TYPE rs_bool.
ENDCLASS.                    "routine DEFINITION

*$*$ begin of 2nd part global - insert your code only below this line  *
... "insert your code here


*$*$ end of 2nd part global - insert your code only before this line   *

*---------------------------------------------------------------------*
*       CLASS routine IMPLEMENTATION
*---------------------------------------------------------------------*
*
*---------------------------------------------------------------------*
CLASS lcl_transform IMPLEMENTATION.

*----------------------------------------------------------------------*
*       Method end_routine
*----------------------------------------------------------------------*
*       Calculation of result package via end routine.
*       Note: Update of target fields depends on rule assignment in
*       transformation editor. Only fields that have a rule assigned,
*       are updated to the data target.
*----------------------------------------------------------------------*
*   <-> result package
*----------------------------------------------------------------------*
  METHOD end_routine.
*=== Segments ===

    FIELD-SYMBOLS:
      <RESULT_FIELDS>    TYPE _ty_s_TG_1.

    DATA:
      MONITOR_REC     TYPE rstmonitor.

*$*$ begin of routine - insert your code only below this line        *-*

    DATA: lt_result TYPE TABLE OF _ty_s_tg_1.

    DATA: ls_result TYPE _ty_s_tg_1.
    DATA: v_record TYPE rsarecord VALUE 1.
    DATA: v_GPSG TYPE /BIC/OIZNOV_GPSG.
    DATA: v_ZACC_MAN TYPE /BIC/OIZBPARTNER.
    DATA: t_ZACC_MAN TYPE RSTXTLG.
    DATA: v_pack_tx TYPE /BIC/OIZPACKTYPE.
    DATA: t_pack_tx TYPE RSTXTLG.

    MOVE: RESULT_PACKAGE[] TO lt_result[].
    CLEAR: RESULT_PACKAGE, ls_result.

  "Insere cabeçalho apenas uma vez
    IF datapackid EQ 1.
 "Insere o cabeçalho
      ls_result-/BIC/ZNOV_SSOT  = 'SCC_OUTROS'.
      ls_result-MATL_GROUP      = 'Marca'.
      ls_result-/BIC/ZSUBBRAND  = 'Sub-Brand'.
      ls_result-/BIC/ZEMB_TP    = 'Tipo Embalagem'.
      ls_result-/BIC/ZNOV_MAID  = 'Marca_Novanet'.
      ls_result-/BIC/ZBPARTNER  = 'Cod-Parceiro de Negócio'.
      ls_result-/BIC/ZBPARTNER_T  = 'Parceiro de Negócio'.
      ls_result-REGIO_GRP       = 'AEC: agrup.estr.reg.'.
      ls_result-/BIC/ZCOD_CONC  = 'Concelho'.
      ls_result-/BIC/ZCOD_FREG  = 'Freguesia'.
      ls_result-/BIC/ZTPLOGIA3  = 'Tipologia 3'.
      ls_result-/BIC/ZABC       = 'OPB'.
      ls_result-/BIC/ZACC_MAN   = 'Account Manager'.
      ls_result-/BIC/ZNOV_GPST  = 'Cliente: GPS Lat'.
      ls_result-/BIC/ZNOV_GPSG  = 'Cliente: GPS Long'.
      ls_result-/BIC/ZCAPACITY  = 'Capacity'.
      ls_result-/BIC/ZVARIEDAD  = 'Variedade'.
      ls_result-CALMONTH        = 'Ano civil/Mês'.
      ls_result-/BIC/ZNOV_LITR  = 'Litros'.
      ls_result-/BIC/ZNOV_VDTT  = 'Vendas Totais'.
      ls_result-CURRENCY        = 'Moeda'.
      ls_result-record     = v_record.

      APPEND ls_result TO RESULT_PACKAGE.
      CLEAR: ls_result.
      CLEAR: v_GPSG.
      CLEAR: v_ZACC_MAN.
      CLEAR: t_ZACC_MAN.
      CLEAR: v_pack_tx.
      CLEAR: t_pack_tx.

 ENDIF.

   LOOP AT lt_result INTO ls_result.
 "Tratamento de sinal Cliente: GPS Long"
     v_GPSG = ls_result-/BIC/ZNOV_GPSG * -1.
    CONCATENATE '-' v_GPSG
               INTO ls_result-/BIC/ZNOV_GPSG.

"Seleciona o Texto do campo Account Manager"
    v_ZACC_MAN = ls_result-/BIC/ZACC_MAN.
    select single TXTLG from /BIC/TZBPARTNER
      into t_ZACC_MAN
      WHERE /BIC/ZBPARTNER = v_ZACC_MAN.
      if sy-subrc = 0.
      ENDIF.
     ls_result-/BIC/ZACC_MAN = t_ZACC_MAN.

 CLEAR ls_result-record.
      ls_result-record = v_record + 1.
      CLEAR v_record.
      v_record = ls_result-record.

      APPEND ls_result TO RESULT_PACKAGE.
      CLEAR: ls_result.
    ENDLOOP.


*$*$ end of routine - insert your code only before this line         *-*
  ENDMETHOD.                    "end_routine
*----------------------------------------------------------------------*
*       Inverse method inverse_end_routine
*----------------------------------------------------------------------*
*       This subroutine needs to be implemented only for direct access
*       (for better performance) and for the Report/Report Interface
*       (drill through).
*       The inverse routine should transform a projection and
*       a selection for the target to a projection and a selection
*       for the source, respectively.
*       If the implementation remains empty all fields are filled and
*       all values are selected.
*----------------------------------------------------------------------*
*       Customer comment:
*----------------------------------------------------------------------*
  METHOD inverse_end_routine.

*   IMPORTING
*     i_r_selset_outbound          TYPE REF TO cl_rsmds_set
*     i_th_fields_outbound         TYPE HASHED TABLE
*     i_r_selset_outbound_complete TYPE REF TO cl_rsmds_set
*     i_r_universe_inbound         TYPE REF TO cl_rsmds_universe
*   CHANGING
*     c_r_selset_inbound           TYPE REF TO cl_rsmds_set
*     c_th_fields_inbound          TYPE HASHED TABLE
*     c_exact                      TYPE rs_bool

*$*$ begin of inverse routine - insert your code only below this line*-*
... "insert your code here
*$*$ end of inverse routine - insert your code only before this line *-*

  ENDMETHOD.                    "inverse_end_routine

  METHOD new_record__end_routine.

***** IMPLEMENTATION  is only visible in generated program *****

  ENDMETHOD.
ENDCLASS.                    "routine IMPLEMENTATION